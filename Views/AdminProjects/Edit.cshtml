@model TrustyPortfolio.Models.ViewModels.EditProjectRequest

<div class="bg-secondary bg-opacity-10 py-2">
    <div class="container">
        <h1>Edit Project - Admin Functionality</h1>
    </div>
</div>

<div class="container py-5">
    @if (Model != null) {
        <form method="post" class="">
            <div>
                <input type="hidden" class="form-control" id="id" asp-for="Id" readonly />
            </div>
            <div class="mb-3">
                <label class="form-label">Title</label>
                <input type="text" class="form-control" id="title" asp-for="Title" required/>
            </div>
            <div class="mb-3">
                <label class="form-label">Content</label>
                <textarea class="form-control" id="content" asp-for="Content" required></textarea>
            </div>
            <div class="mb-3">
                <label class="form-label">Description</label>
                <input type="text" class="form-control" id="description" asp-for="Description" required />
            </div>
            <div class="mb-3">
                <label class="form-label">Featured Image Upload</label>
                <input type="file" id="featuredImageUpload" class="form-control" />
                @if (Model.FeaturedImageUrl != null) {
                    <img src="@Model.FeaturedImageUrl" id="featuredImageDisplay" style="display:block; width: 300px;" />
                } else {
                    <img src="" id="featuredImageDisplay" style="display:none; width: 300px;" />
                }
            </div>
            <div>
                <input type="hidden" class="form-control" id="featuredImageUrl" asp-for="FeaturedImageUrl" />
            </div>
            <div class="mb-3">
                <label class="form-label">Project URL</label>
                <input type="text" class="form-control" id="projectUrl" asp-for="ProjectUrl" />
            </div>
            <div>
                <input type="hidden" class="form-control" id="urlHandle" asp-for="UrlHandle" />
            </div>
            <div class="mb-3">
                <label class="form-label">Published Date</label>
                <input type="date" class="form-control" id="publishedDate" asp-for="PublishDate" />
            </div>
            <div class="form-check mb-3">
                <input class="form-check-input" type="checkbox" id="visible" asp-for="Visible">
                <label class="form-check-label">Is Visible?</label>
            </div>
            <div class="form-check mb-3">
                <input class="form-check-input" type="checkbox" id="featured" asp-for="Featured">
                <label class="form-check-label">Is Featured?</label>
            </div>
            <div class="mb-3">
                <label class="form-label">Tags</label>
                <select class="form-select" asp-items="@Model.Tags" asp-for="SelectedTags">
                </select>
            </div>
            <div class="mb-3 d-flex">
                <button type="submit" class="btn btn-dark me-2">Save</button>
                <button type="submit" class="btn btn-danger me-2" asp-area="" asp-controller="AdminProjects" asp-action="Delete">Delete</button>
            </div>
        </form>
    } else {
        <p>No Project Post Found!</p>
    }
</div>

@section Scripts {
    <script>
        var editor = new FroalaEditor('#content');

        const featuredUploadElement = document.getElementById('featuredImageUpload');
        const featuredImageUrlElement = document.getElementById('featuredImageUrl');
        const featuredImageDisplayElement = document.getElementById('featuredImageDisplay');

        async function uploadFeaturedImage(e) {
            console.log(e.target.files[0]);
            let data = new FormData();
            data.append('file', e.target.files[0]);

            await fetch('/api/images', {
                method: 'POST',
                headers: {
                    'Accept': '*/*'
                },
                body: data
            }).then(response => response.json())
                .then(result => {
                    featuredImageUrlElement.value = result;
                    featuredImageDisplayElement.src = result;
                    featuredImageDisplayElement.style.display = 'block';
                });
        }

        featuredUploadElement.addEventListener('change', uploadFeaturedImage);
    </script>
}